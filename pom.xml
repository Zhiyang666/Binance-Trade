<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.binance.sdk</groupId>
    <artifactId>binance-client</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <description>Binance project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <okhttp3.version>3.12.1</okhttp3.version>
        <fastjson.version>1.2.47</fastjson.version>
    </properties>



    <dependencies>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <!--spring boot相关配置 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions><!-- 去掉springboot默认配置 -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 引入log4j2依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- 引入lombok依赖 日志、对象注解什么的 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- druid 驱动 -->
<!--        <dependency>-->
<!--            <groupId>com.alibaba</groupId>-->
<!--            <artifactId>druid</artifactId>-->
<!--            <version>1.1.9</version>-->
<!--        </dependency>-->
        <!-- sqlite3驱动包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.gwenn</groupId>
            <artifactId>sqlite-dialect</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.30.1</version>
        </dependency>
    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-clean-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;<skip>true</skip>&ndash;&gt;-->
<!--                    &lt;!&ndash;<failOnError>false</failOnError>&ndash;&gt;-->
<!--                    &lt;!&ndash;当配置true时,只清理filesets里的文件,构建目录中得文件不被清理.默认是flase.&ndash;&gt;-->
<!--                    <excludeDefaultDirectories>true</excludeDefaultDirectories>-->
<!--                    <filesets>-->
<!--                        <fileset>-->
<!--                            &lt;!&ndash;要清理的目录位置&ndash;&gt;-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            &lt;!&ndash;是否跟随符号链接 (symbolic links)&ndash;&gt;-->
<!--                            <followSymlinks>false</followSymlinks>-->
<!--                            &lt;!&ndash;默认有些文件是不会被清理的,比如.svn文件,如果设置成false,则全部按照自定义的来处理&ndash;&gt;-->
<!--                            <useDefaultExcludes>true</useDefaultExcludes>-->
<!--                            &lt;!&ndash;对这些文件不清理&ndash;&gt;-->
<!--                            <excludes>-->
<!--                                &lt;!&ndash; 注意*.db匹配的是target下的db文件,但实际上要匹配所有的 &ndash;&gt;-->
<!--                                <exclude>**/*.db</exclude>-->
<!--                            </excludes>-->
<!--                        </fileset>-->
<!--                    </filesets>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>